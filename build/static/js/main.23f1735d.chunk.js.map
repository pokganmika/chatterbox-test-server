{"version":3,"sources":["components/Header.js","routes/Home.js","components/Common/RoomCard.js","components/Chat/Room.js","components/Common/ChatCard.js","components/Chat/Post.js","routes/Chat.js","components/Login/Login.js","routes/Login.js","components/Signup/Signup.js","routes/Signup.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Fragment","src","alt","Component","withStyles","card","maxWidth","media","height","classes","room","Card_default","CardActionArea_default","CardContent_default","Typography_default","gutterBottom","variant","component","Room","_createRoom","asyncToGenerator","regenerator_default","mark","_callee2","roomName","wrap","_context2","prev","next","axios","post","then","_ref2","_callee","res","_context","console","log","stop","_x","apply","arguments","catch","err","_roomRender","rooms","reverse","map","Room_RoomList","get","data","setState","type","placeholder","name","value","onChange","_writeRoom","onClick","length","RoomList","_ref4","RoomCard","text","PostSubmit","_writeChat","e","defineProperty","target","_sendChat","_this$state","userName","roomId","_ref3","sent","chats","_chatRender","chat","Post_ChatList","texts","ChatList","_ref5","DivChat","ChatCard","styled","div","_templateObject","Chat","react","Chat_Room","Post","Login","usersId","password","components_Login_Login","Signup","_writeAccount","_registerAccount","signComplete","history","Redirect","components_Signup_Signup","App","BrowserRouter","src_components_Header","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23f1735d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n// import styled from 'styled-components';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <Link to='/' className=\"item\">Chatter Box</Link>\n      <Link to='/post' className=\"item\">Chat</Link>\n      <Link to='/users/login' className=\"item\">Log in</Link>\n      <Link to='/users/signup' className=\"item\">Sign up</Link> \n    </div>\n  );\n}\n\n// const DivHeader = styled.div`\n//   background: #5c7cfa;\n//   display: table;\n//   table-layout: fixed;\n//   width: 100%;\n// `;\n\n// const DivItem = styled.div`\n//   text-align: center;\n//   padding-top: 1rem;\n//   padding-bottom: 1rem;\n//   display: table-cell;\n//   color: white;\n//   text-decoration: none;\n//   font-size: 1.1rem;\n//   &:hover{\n//     background: #748ffc;\n//   }\n//   &:active{\n//     background: white;\n//     color: #5c7cfa;\n//   }\n// `;\n\nexport default Header;\n","import React, { Component } from 'react';\n// import axios from 'axios';\n\nclass Home extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {};\n  }\n\n  // async componentDidMount() {\n  //   const { data } = await axios.get('/api/post');\n  //   // const { data } = await axios.get('/api/users/index')\n  //   console.log('얘가 데타 : ', data);\n  //     // .then(res => { \n  //     //   console.log('----이것이 다타',res)\n\n  //     // })\n  // }\n\n  render() { \n    return (\n      <React.Fragment>\n        <h1>Chatter Box</h1>\n        <img \n        src='https://pilbox.themuse.com/image.jpg?url=https%3A%2F%2Fassets.themuse.com%2Fuploaded%2Fattachments%2F20883.jpg%3Fv%3D63468a40704a57e39eccca67c4649865ab0aafc20c3e9d7867ed4d9d32194106&h=367&prog=1' \n        alt=\"description of image\" \n        />\n      </React.Fragment>  \n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n};\n\nfunction MediaCard(props) {\n  const { classes, room } = props;\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {room}\n          </Typography>\n          {/* <Typography component=\"p\">\n            {text}\n          </Typography> */}\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nMediaCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaCard);\n","import React, { Component } from 'react';\nimport axios from 'axios';\n// import styled from 'styled-components';\n\nimport RoomCard from '../Common/RoomCard';\n\nclass Room extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      roomName: '',\n      rooms: []\n    };\n  }\n\n  async componentDidMount() {\n    const { data } = await axios.get('/api/room')\n\n    this.setState({\n      rooms: data\n    })\n    // console.log('Room => this.state.rooms : ', this.state.rooms)\n  }\n\n  // _writeRoom = e => { \n  //   this.setState({\n  //     [e.target.name]: e.target.value\n  //   })\n  // }\n\n  _createRoom = async () => { \n    const { roomName } = this.state;\n    await axios.post('/api/room', { roomName })\n      .then(async res => { \n        console.log('success room create')\n      })\n      \n      .catch(err => { \n        console.log('fail room create')\n      })\n  }\n\n  _roomRender = () => { \n    const { rooms } = this.state;\n    return (\n      rooms.reverse().map(room => { \n        return (\n          <RoomList\n            room={room.roomName}\n          />\n        );\n      })\n    );\n  }\n\n  render () { \n    const { rooms } = this.state;\n    return ( \n      <React.Fragment>\n        <input\n          type=\"text\"\n          placeholder='roomname'\n          name={'roomName'}\n          value={this.state.roomName}\n          onChange={this.props._writeRoom}\n        />\n        <input\n          type=\"submit\"\n          value=\"Room Create\"\n          onClick={this._createRoom}\n        />\n        {rooms.length !== 0 ? this._roomRender() : 'Loading'}\n      </React.Fragment>\n    );\n  }\n}\n\nconst RoomList = ({ room }) => { \n  return (\n    <RoomCard \n      room={room}\n\n    />\n  );\n}\n\nexport default Room;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n};\n\nfunction MediaCard(props) {\n  const { classes, name, text } = props;\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        {/* <CardMedia\n          className={classes.media}\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\n          title=\"Contemplative Reptile\"\n        /> */}\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography component=\"p\">\n            {text}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n\nMediaCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaCard);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport ChatCard from '../Common/ChatCard';\n\nclass PostSubmit extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      userName: '',\n      text: '',\n      texts: [],\n      chats: [],\n      roomId : 1\n      // roomId : null\n    };\n  }\n\n  async componentDidMount() {\n    const { data } = await axios.get('/api/post');\n    // console.log('이것이 다타 : ',data)\n    this.setState({\n      chats: data\n    })\n    console.log('Chat => this.state.chat : ',this.state.chats)\n  }\n\n  _writeChat = e => { \n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n  _sendChat = async () => { \n    const { userName, text, roomId } = this.state;\n    await axios.post('/api/post', { userName, text, roomId })\n      .then(async res => { \n        console.log('send chat complete')\n\n        const { data } = await axios.get('/api/post')\n        this.setState({\n          chats: data\n        })\n\n      })\n      .catch(err => { \n        console.log('sending failed')\n      })\n  }\n\n  _chatRender = () => { \n    const { chats } = this.state;\n    return (\n      chats.reverse().map(chat => (\n        <ChatList\n        name={chat.userName}\n        text={chat.text}\n        />\n      ))\n    );\n  }\n\n  render () { \n    const { chats } = this.state;\n    return (\n      <React.Fragment>\n        <input\n          type='text'\n          placeholder='username'\n          name={'userName'}\n          value={this.state.userName}\n          onChange={this._writeChat}\n        />\n        <input\n          type='text'\n          placeholder='text'\n          name={'text'}\n          value={this.state.text}\n          onChange={this._writeChat}\n        />\n        {/* <input type='text' placeholder='roomname'/> */}\n        <input\n          type='submit'\n          value=\"Submit\"\n          onClick={this._sendChat} />\n        {chats.length !== 0 ? this._chatRender() : 'Loading'}\n      </React.Fragment>\n    );\n  }\n}\n\nconst ChatList = ({ name, text}) => { \n  return (\n    <DivChat>\n      <ChatCard\n        name={name}\n        text={text}\n      />\n    </DivChat>\n  );\n}\n\nconst DivChat = styled.div`\n  margin: 1rem;\n`; \n\nexport default PostSubmit;\n","import React, { Component, Fragment } from 'react';\n// import axios from 'axios';\n\nimport Room from '../components/Chat/Room';\nimport Post from '../components/Chat/Post';\n\nclass Chat extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      roomName: ''\n    };\n  }\n  \n  _writeRoom = e => { \n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render () { \n    return (\n      <Fragment>\n        <h1>Chat</h1>\n        <Room _writeRoom={this._writeRoom} /><br />\n        {/* <Post roomName={this.state.roomName}/> */}\n        <Post roomName={this.state.roomName && this.state.roomName}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      usersId: '',\n      password: ''\n    };\n  }\n  \n  componentDidMount() {\n    \n  }\n\n  render() { \n    return (\n      <React.Fragment>\n        <input type='text' placeholder='id' /><br/>\n        <input type='password' placeholder='password' /><br/>\n        <input type='submit' value='Log in' /><br/>\n        아직 회원이 아니면\n        <Link to='/users/signup'>회원가입</Link>\n        을 해주세요\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component, Fragment } from 'react';\n\nimport Log from '../components/Login/Login';\n\nclass Login extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() { \n    return (\n      <Fragment>\n        <h1>로그인</h1>\n        <Log />\n      </Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Signup extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      usersId: '',\n      password: '',\n      signComplete: false\n    };\n  }\n\n  componentDidMount() {\n    \n  }\n\n  _writeAccount = e => { \n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  _registerAccount = async () => { \n    const { usersId, password } = this.state;\n\n    await axios.post('/api/users/signup', { usersId, password })\n      .then(res => { \n        console.log('[+] 유저 가입 성공');\n        // history를 사용하여 유저를 가입시킴?\n        // history는 외부에서 받아 import해서 사용할 수도 있고\n        // 만들어 사용도 가능??\n        // redirect\n\n        //-----\n        // res.data === '가입 완료' && this.props.history.push('/users/login')\n        // console.log('이것이 다타 : ',res.data)\n        // console.log('이것이 다타 : ',this.props.history)\n        //------\n        this.setState({\n          signComplete: true\n        })\n      })\n      .catch(err => { \n        console.log('[-] 유저 가입 실패')\n      })\n  }\n\n  render () { \n    console.log('이것이 히스토리 : ', this.props.history)\n\n    if (this.state.signComplete === true) { \n      return <Redirect to='/users/login' />\n    }\n\n    return (\n      <React.Fragment>\n        <input\n          type='text'\n          placeholder='id'\n          name={'usersId'}\n          value={this.state.usersId}\n          onChange={this._writeAccount}\n        /><br />\n        <input\n          type='password'\n          placeholder='password'\n          name={'password'}\n          value={this.state.password}\n          onChange={this._writeAccount}\n        /><br />\n        {/* <input type='text' placeholder='password' /><br /> */}\n        {/* 패스워드 타당성 검사 필요 */}\n        <input\n          type='submit'\n          value='Sign up'\n          onClick={this._registerAccount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from 'react';\n\nimport Sign from '../components/Signup/Signup';\n\nclass Signup extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() { \n    return (\n      <Fragment>\n        <h1>회원가입</h1>\n        <Sign />\n      </Fragment>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import logo from './logo.svg';\n// import './App.css';\n\nimport Header from './components/Header';\nimport Home from './routes/Home';\nimport Chat from './routes/Chat';\nimport Login from './routes/Login';\nimport Signup from './routes/Signup';\n\nclass App extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <>\n          <Header/>\n          {/* Route를 사용할 경우 props를 내리는 방법 but 문제가 생길 수도 있다!!*/}\n          {/* <Route exact path='/' component={() => <Home username={this.state.username}/>}/> */}\n          <Route exact path='/' component={Home} />\n          <Route path='/post' component={Chat} />\n          <Route path='/users/login' component={Login}/>\n          <Route path='/users/signup' component={Signup}/>\n        </>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}